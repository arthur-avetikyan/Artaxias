// <auto-generated />
using System;
using Artaxias;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Artaxias.Data.Migrations
{
    [DbContext(typeof(ArtaxiasDbContext))]
    [Migration("20210125110644_added-reviewdepartment-table")]
    partial class addedreviewdepartmenttable
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("Artaxias.Data.Models.DomainState", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DomainState");
                });

            modelBuilder.Entity("Artaxias.Data.Models.Feadback.AnswerOption", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("AnswerOptionTypeId")
                        .HasColumnType("int");

                    b.Property<int>("QuestionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AnswerOptionTypeId");

                    b.HasIndex("QuestionId")
                        .IsUnique();

                    b.ToTable("AnswerOption");
                });

            modelBuilder.Entity("Artaxias.Data.Models.Feadback.AnswerOptionType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AnswerOptionType");
                });

            modelBuilder.Entity("Artaxias.Data.Models.Feadback.AnswerValue", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("AnswerOptionId")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AnswerOptionId");

                    b.ToTable("AnswerValue");
                });

            modelBuilder.Entity("Artaxias.Data.Models.Feadback.Feedback", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("ProvidedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("ReviewerRevieweeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ReviewerRevieweeId")
                        .IsUnique();

                    b.ToTable("Feedback");
                });

            modelBuilder.Entity("Artaxias.Data.Models.Feadback.FeedbackAnswer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("FeedbackId")
                        .HasColumnType("int");

                    b.Property<string>("OpenTextValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("QuestionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FeedbackId");

                    b.HasIndex("QuestionId");

                    b.ToTable("FeedbackAnswer");
                });

            modelBuilder.Entity("Artaxias.Data.Models.Feadback.FeedbackAnswerValue", b =>
                {
                    b.Property<int>("AnswerValueId")
                        .HasColumnType("int");

                    b.Property<int>("FeedbackAnswerId")
                        .HasColumnType("int");

                    b.HasKey("AnswerValueId", "FeedbackAnswerId");

                    b.HasIndex("FeedbackAnswerId");

                    b.ToTable("FeedbackAnswerValue");
                });

            modelBuilder.Entity("Artaxias.Data.Models.Feadback.FeedbackTemplate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CreatedByUserId");

                    b.ToTable("FeedbackTemplate");
                });

            modelBuilder.Entity("Artaxias.Data.Models.Feadback.Question", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FeedbackTemplateId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FeedbackTemplateId");

                    b.ToTable("Question");
                });

            modelBuilder.Entity("Artaxias.Data.Models.Feadback.Review", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDateTimeUTC")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Deadline")
                        .HasColumnType("datetime2");

                    b.Property<int>("FeedbackTemplateId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CreatedByUserId");

                    b.HasIndex("FeedbackTemplateId");

                    b.ToTable("Review");
                });

            modelBuilder.Entity("Artaxias.Data.Models.Feadback.ReviewDepartment", b =>
                {
                    b.Property<int>("ReviewId")
                        .HasColumnType("int")
                        .HasColumnName("ReviewId");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int")
                        .HasColumnName("DepartmentId");

                    b.HasKey("ReviewId", "DepartmentId");

                    b.HasIndex("DepartmentId");

                    b.ToTable("ReviewDepartment");
                });

            modelBuilder.Entity("Artaxias.Data.Models.Feadback.ReviewerReviewee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("DomainStateId")
                        .HasColumnType("int");

                    b.Property<int?>("FeedbackId")
                        .HasColumnType("int");

                    b.Property<int>("ReviewId")
                        .HasColumnType("int");

                    b.Property<int>("RevieweeId")
                        .HasColumnType("int");

                    b.Property<int>("ReviewerId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DomainStateId");

                    b.HasIndex("ReviewId");

                    b.HasIndex("RevieweeId");

                    b.HasIndex("ReviewerId");

                    b.ToTable("ReviewerReviewee");
                });

            modelBuilder.Entity("Artaxias.Data.Models.Organization.Absence", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("ApproverId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDatetimeUTC")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedDatetimeUTC")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<int>("DomainStateId")
                        .HasColumnType("int");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Reason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ReceiverId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("TypeId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDatetimeUTC")
                        .ValueGeneratedOnUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedDatetimeUTC")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.HasKey("Id");

                    b.HasIndex("ApproverId");

                    b.HasIndex("DomainStateId");

                    b.HasIndex("ReceiverId");

                    b.HasIndex("TypeId");

                    b.ToTable("Absence");
                });

            modelBuilder.Entity("Artaxias.Data.Models.Organization.AbsenceType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AbsenceType");
                });

            modelBuilder.Entity("Artaxias.Data.Models.Organization.Bonus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<int>("ApproverId")
                        .HasColumnType("int");

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDatetimeUTC")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedDatetimeUTC")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<int>("DomainStateId")
                        .HasColumnType("int");

                    b.Property<DateTime>("PaymentDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ReceiverId")
                        .HasColumnType("int");

                    b.Property<int>("RequesterId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDatetimeUTC")
                        .ValueGeneratedOnUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedDatetimeUTC")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.HasKey("Id");

                    b.HasIndex("ApproverId");

                    b.HasIndex("DomainStateId");

                    b.HasIndex("ReceiverId");

                    b.HasIndex("RequesterId");

                    b.ToTable("Bonus");
                });

            modelBuilder.Entity("Artaxias.Data.Models.Organization.ContractTemplate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDatetimeUTC")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedDatetimeUTC")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<string>("Path")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDatetimeUTC")
                        .ValueGeneratedOnUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedDatetimeUTC")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.HasKey("Id");

                    b.HasIndex("CreatedByUserId");

                    b.ToTable("ContractTemplate");
                });

            modelBuilder.Entity("Artaxias.Data.Models.Organization.ContractTemplateMapping", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("ContractTemplateId")
                        .HasColumnType("int");

                    b.Property<string>("EntityField")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TemplateField")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ContractTemplateId");

                    b.ToTable("ContractTemplateMapping");
                });

            modelBuilder.Entity("Artaxias.Data.Models.Organization.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Department");
                });

            modelBuilder.Entity("Artaxias.Data.Models.Organization.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime?>("ContractEnd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ContractStart")
                        .HasColumnType("datetime2");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Employee");
                });

            modelBuilder.Entity("Artaxias.Data.Models.Organization.EmployeeDepartment", b =>
                {
                    b.Property<int>("EmployeeId")
                        .HasColumnType("int")
                        .HasColumnName("EmployeeId");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int")
                        .HasColumnName("DepartmentId");

                    b.HasKey("EmployeeId", "DepartmentId");

                    b.HasIndex("DepartmentId");

                    b.ToTable("EmployeeDepartment");
                });

            modelBuilder.Entity("Artaxias.Data.Models.Organization.Salary", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("AssignmentDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<double>("GrossAmount")
                        .HasColumnType("float");

                    b.Property<double>("NetAmount")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Salary");
                });

            modelBuilder.Entity("Artaxias.Data.Models.RefreshToken", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<DateTime>("Expires")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Revoked")
                        .HasColumnType("datetime2");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("RefreshToken");
                });

            modelBuilder.Entity("Artaxias.Models.Permission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id")
                        .UseIdentityColumn();

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)")
                        .HasColumnName("Code");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)")
                        .HasColumnName("Name");

                    b.HasKey("Id");

                    b.ToTable("Permission", "dbo");
                });

            modelBuilder.Entity("Artaxias.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id")
                        .UseIdentityColumn();

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CreatedByUserId")
                        .HasColumnType("int")
                        .HasColumnName("CreatedByUserId");

                    b.Property<DateTime>("CreatedDatetimeUTC")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedDatetimeUTC")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)")
                        .HasColumnName("Name");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int?>("UpdatedByUserId")
                        .HasColumnType("int")
                        .HasColumnName("UpdatedByUserId");

                    b.Property<DateTime?>("UpdatedDatetimeUTC")
                        .ValueGeneratedOnUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedDatetimeUTC")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.HasKey("Id");

                    b.HasIndex("CreatedByUserId");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.HasIndex("UpdatedByUserId");

                    b.ToTable("Role", "dbo");
                });

            modelBuilder.Entity("Artaxias.Models.RolePermission", b =>
                {
                    b.Property<int>("RoleId")
                        .HasColumnType("int")
                        .HasColumnName("RoleId");

                    b.Property<int>("PermissionId")
                        .HasColumnType("int")
                        .HasColumnName("PermissionId");

                    b.HasKey("RoleId", "PermissionId");

                    b.HasIndex("PermissionId");

                    b.ToTable("RolePermission", "dbo");
                });

            modelBuilder.Entity("Artaxias.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDatetimeUTC")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedDatetimeUTC")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)")
                        .HasColumnName("FirstName");

                    b.Property<int>("HashingIterationCount")
                        .HasColumnType("int")
                        .HasColumnName("HashingIterationCount");

                    b.Property<byte[]>("HashingSalt")
                        .HasColumnType("binary(64)")
                        .HasColumnName("HashingSalt");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("IsActive");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)")
                        .HasColumnName("LastName");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdatedDatetimeUTC")
                        .ValueGeneratedOnUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedDatetimeUTC")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("User", "dbo");
                });

            modelBuilder.Entity("Artaxias.Models.UserRole", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("UserRole");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("Artaxias.Data.Models.Feadback.AnswerOption", b =>
                {
                    b.HasOne("Artaxias.Data.Models.Feadback.AnswerOptionType", "OptionType")
                        .WithMany("AnswerOptions")
                        .HasForeignKey("AnswerOptionTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Artaxias.Data.Models.Feadback.Question", "Question")
                        .WithOne("AnswerOption")
                        .HasForeignKey("Artaxias.Data.Models.Feadback.AnswerOption", "QuestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OptionType");

                    b.Navigation("Question");
                });

            modelBuilder.Entity("Artaxias.Data.Models.Feadback.AnswerValue", b =>
                {
                    b.HasOne("Artaxias.Data.Models.Feadback.AnswerOption", "AnswerOption")
                        .WithMany("Values")
                        .HasForeignKey("AnswerOptionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AnswerOption");
                });

            modelBuilder.Entity("Artaxias.Data.Models.Feadback.Feedback", b =>
                {
                    b.HasOne("Artaxias.Data.Models.Feadback.ReviewerReviewee", "ReviewerReviewee")
                        .WithOne("Feadback")
                        .HasForeignKey("Artaxias.Data.Models.Feadback.Feedback", "ReviewerRevieweeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ReviewerReviewee");
                });

            modelBuilder.Entity("Artaxias.Data.Models.Feadback.FeedbackAnswer", b =>
                {
                    b.HasOne("Artaxias.Data.Models.Feadback.Feedback", "Feedback")
                        .WithMany("FeedbackAnswers")
                        .HasForeignKey("FeedbackId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Artaxias.Data.Models.Feadback.Question", "Question")
                        .WithMany()
                        .HasForeignKey("QuestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Feedback");

                    b.Navigation("Question");
                });

            modelBuilder.Entity("Artaxias.Data.Models.Feadback.FeedbackAnswerValue", b =>
                {
                    b.HasOne("Artaxias.Data.Models.Feadback.AnswerValue", "AnswerValue")
                        .WithMany("FeedbackAnswerValues")
                        .HasForeignKey("AnswerValueId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Artaxias.Data.Models.Feadback.FeedbackAnswer", "FeedbackAnswer")
                        .WithMany("FeedbackAnswerValues")
                        .HasForeignKey("FeedbackAnswerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AnswerValue");

                    b.Navigation("FeedbackAnswer");
                });

            modelBuilder.Entity("Artaxias.Data.Models.Feadback.FeedbackTemplate", b =>
                {
                    b.HasOne("Artaxias.Models.User", "CreatedByUser")
                        .WithMany("FeedbackTemplates")
                        .HasForeignKey("CreatedByUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CreatedByUser");
                });

            modelBuilder.Entity("Artaxias.Data.Models.Feadback.Question", b =>
                {
                    b.HasOne("Artaxias.Data.Models.Feadback.FeedbackTemplate", "FeedbackTemplate")
                        .WithMany("Questions")
                        .HasForeignKey("FeedbackTemplateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FeedbackTemplate");
                });

            modelBuilder.Entity("Artaxias.Data.Models.Feadback.Review", b =>
                {
                    b.HasOne("Artaxias.Models.User", "CreatedByUser")
                        .WithMany("Reviews")
                        .HasForeignKey("CreatedByUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Artaxias.Data.Models.Feadback.FeedbackTemplate", "FeedbackTemplate")
                        .WithMany("Reviews")
                        .HasForeignKey("FeedbackTemplateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CreatedByUser");

                    b.Navigation("FeedbackTemplate");
                });

            modelBuilder.Entity("Artaxias.Data.Models.Feadback.ReviewDepartment", b =>
                {
                    b.HasOne("Artaxias.Data.Models.Organization.Department", "Department")
                        .WithMany("Reviews")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Artaxias.Data.Models.Feadback.Review", "Review")
                        .WithMany("Departments")
                        .HasForeignKey("ReviewId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");

                    b.Navigation("Review");
                });

            modelBuilder.Entity("Artaxias.Data.Models.Feadback.ReviewerReviewee", b =>
                {
                    b.HasOne("Artaxias.Data.Models.DomainState", "DomainState")
                        .WithMany("ReviewerReviewees")
                        .HasForeignKey("DomainStateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Artaxias.Data.Models.Feadback.Review", "Review")
                        .WithMany("ReviewerReviewees")
                        .HasForeignKey("ReviewId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Artaxias.Data.Models.Organization.Employee", "Reviewee")
                        .WithMany("Reviewees")
                        .HasForeignKey("RevieweeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Artaxias.Data.Models.Organization.Employee", "Reviewer")
                        .WithMany("Reviewers")
                        .HasForeignKey("ReviewerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DomainState");

                    b.Navigation("Review");

                    b.Navigation("Reviewee");

                    b.Navigation("Reviewer");
                });

            modelBuilder.Entity("Artaxias.Data.Models.Organization.Absence", b =>
                {
                    b.HasOne("Artaxias.Data.Models.Organization.Employee", "Approver")
                        .WithMany("AbsencesToApprove")
                        .HasForeignKey("ApproverId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Artaxias.Data.Models.DomainState", "State")
                        .WithMany("Absences")
                        .HasForeignKey("DomainStateId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Artaxias.Data.Models.Organization.Employee", "Receiver")
                        .WithMany("AbsencesAssigned")
                        .HasForeignKey("ReceiverId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Artaxias.Data.Models.Organization.AbsenceType", "Type")
                        .WithMany("AbsencesAssigned")
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Approver");

                    b.Navigation("Receiver");

                    b.Navigation("State");

                    b.Navigation("Type");
                });

            modelBuilder.Entity("Artaxias.Data.Models.Organization.Bonus", b =>
                {
                    b.HasOne("Artaxias.Data.Models.Organization.Employee", "Approver")
                        .WithMany("BonusesToApprove")
                        .HasForeignKey("ApproverId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Artaxias.Data.Models.DomainState", "State")
                        .WithMany("Bonuses")
                        .HasForeignKey("DomainStateId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Artaxias.Data.Models.Organization.Employee", "Receiver")
                        .WithMany("BonusesAssigned")
                        .HasForeignKey("ReceiverId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Artaxias.Data.Models.Organization.Employee", "Requester")
                        .WithMany("BonusesRequested")
                        .HasForeignKey("RequesterId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Approver");

                    b.Navigation("Receiver");

                    b.Navigation("Requester");

                    b.Navigation("State");
                });

            modelBuilder.Entity("Artaxias.Data.Models.Organization.ContractTemplate", b =>
                {
                    b.HasOne("Artaxias.Models.User", "CreatedByUser")
                        .WithMany("ContractTemplates")
                        .HasForeignKey("CreatedByUserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("CreatedByUser");
                });

            modelBuilder.Entity("Artaxias.Data.Models.Organization.ContractTemplateMapping", b =>
                {
                    b.HasOne("Artaxias.Data.Models.Organization.ContractTemplate", "ContractTemplate")
                        .WithMany("Mappings")
                        .HasForeignKey("ContractTemplateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ContractTemplate");
                });

            modelBuilder.Entity("Artaxias.Data.Models.Organization.Employee", b =>
                {
                    b.HasOne("Artaxias.Models.User", "User")
                        .WithOne("Employee")
                        .HasForeignKey("Artaxias.Data.Models.Organization.Employee", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Artaxias.Data.Models.Organization.EmployeeDepartment", b =>
                {
                    b.HasOne("Artaxias.Data.Models.Organization.Department", "Department")
                        .WithMany("Staff")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Artaxias.Data.Models.Organization.Employee", "Employee")
                        .WithMany("Departments")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("Artaxias.Data.Models.Organization.Salary", b =>
                {
                    b.HasOne("Artaxias.Data.Models.Organization.Employee", "Employee")
                        .WithMany("Salaries")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("Artaxias.Data.Models.RefreshToken", b =>
                {
                    b.HasOne("Artaxias.Models.User", "User")
                        .WithMany("RefreshTokens")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Artaxias.Models.Role", b =>
                {
                    b.HasOne("Artaxias.Models.User", "User_CreatedByUserId")
                        .WithMany("Roles_CreatedByUserId")
                        .HasForeignKey("CreatedByUserId");

                    b.HasOne("Artaxias.Models.User", "User_UpdatedByUserId")
                        .WithMany("Roles_UpdatedByUserId")
                        .HasForeignKey("UpdatedByUserId");

                    b.Navigation("User_CreatedByUserId");

                    b.Navigation("User_UpdatedByUserId");
                });

            modelBuilder.Entity("Artaxias.Models.RolePermission", b =>
                {
                    b.HasOne("Artaxias.Models.Permission", "Permission")
                        .WithMany("RolePermissions")
                        .HasForeignKey("PermissionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Artaxias.Models.Role", "Role")
                        .WithMany("RolePermissions")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Permission");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Artaxias.Models.UserRole", b =>
                {
                    b.HasOne("Artaxias.Models.Role", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Artaxias.Models.User", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.HasOne("Artaxias.Models.Role", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.HasOne("Artaxias.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.HasOne("Artaxias.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.HasOne("Artaxias.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Artaxias.Data.Models.DomainState", b =>
                {
                    b.Navigation("Absences");

                    b.Navigation("Bonuses");

                    b.Navigation("ReviewerReviewees");
                });

            modelBuilder.Entity("Artaxias.Data.Models.Feadback.AnswerOption", b =>
                {
                    b.Navigation("Values");
                });

            modelBuilder.Entity("Artaxias.Data.Models.Feadback.AnswerOptionType", b =>
                {
                    b.Navigation("AnswerOptions");
                });

            modelBuilder.Entity("Artaxias.Data.Models.Feadback.AnswerValue", b =>
                {
                    b.Navigation("FeedbackAnswerValues");
                });

            modelBuilder.Entity("Artaxias.Data.Models.Feadback.Feedback", b =>
                {
                    b.Navigation("FeedbackAnswers");
                });

            modelBuilder.Entity("Artaxias.Data.Models.Feadback.FeedbackAnswer", b =>
                {
                    b.Navigation("FeedbackAnswerValues");
                });

            modelBuilder.Entity("Artaxias.Data.Models.Feadback.FeedbackTemplate", b =>
                {
                    b.Navigation("Questions");

                    b.Navigation("Reviews");
                });

            modelBuilder.Entity("Artaxias.Data.Models.Feadback.Question", b =>
                {
                    b.Navigation("AnswerOption");
                });

            modelBuilder.Entity("Artaxias.Data.Models.Feadback.Review", b =>
                {
                    b.Navigation("Departments");

                    b.Navigation("ReviewerReviewees");
                });

            modelBuilder.Entity("Artaxias.Data.Models.Feadback.ReviewerReviewee", b =>
                {
                    b.Navigation("Feadback");
                });

            modelBuilder.Entity("Artaxias.Data.Models.Organization.AbsenceType", b =>
                {
                    b.Navigation("AbsencesAssigned");
                });

            modelBuilder.Entity("Artaxias.Data.Models.Organization.ContractTemplate", b =>
                {
                    b.Navigation("Mappings");
                });

            modelBuilder.Entity("Artaxias.Data.Models.Organization.Department", b =>
                {
                    b.Navigation("Reviews");

                    b.Navigation("Staff");
                });

            modelBuilder.Entity("Artaxias.Data.Models.Organization.Employee", b =>
                {
                    b.Navigation("AbsencesAssigned");

                    b.Navigation("AbsencesToApprove");

                    b.Navigation("BonusesAssigned");

                    b.Navigation("BonusesRequested");

                    b.Navigation("BonusesToApprove");

                    b.Navigation("Departments");

                    b.Navigation("Reviewees");

                    b.Navigation("Reviewers");

                    b.Navigation("Salaries");
                });

            modelBuilder.Entity("Artaxias.Models.Permission", b =>
                {
                    b.Navigation("RolePermissions");
                });

            modelBuilder.Entity("Artaxias.Models.Role", b =>
                {
                    b.Navigation("RolePermissions");

                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("Artaxias.Models.User", b =>
                {
                    b.Navigation("ContractTemplates");

                    b.Navigation("Employee");

                    b.Navigation("FeedbackTemplates");

                    b.Navigation("RefreshTokens");

                    b.Navigation("Reviews");

                    b.Navigation("Roles_CreatedByUserId");

                    b.Navigation("Roles_UpdatedByUserId");

                    b.Navigation("UserRoles");
                });
#pragma warning restore 612, 618
        }
    }
}
